function getMessage(a, b){
  if(typeof a === "boolean"){
    //   Если первый аргумент, a, имеет тип boolean, то:
    // Если он true, вернуть строку, в которую подставлен параметр b:
    //     "Переданное GIF-изображение анимировано и содержит [b] кадров"
    // Если он false, то вернуть строку:
    //     "Переданное GIF-изображение не анимировано"
    if(a === true){
      return "Переданное GIF-изображение анимировано и содержит " + b + " кадров";
    }
    else if(a === false){
      return "Переданное GIF-изображение не анимировано";
    }
  }
  if(typeof a === "number"){
    //   Если первый аргумент имеет числовой тип, то вернуть строку:
    // "Переданное SVG-изображение содержит [a] объектов и [b * 4] аттрибутов"
    return "Переданное SVG-изображение содержит " + a + " объектов и " + (b * 4) + " аттрибутов";
  }
  if(Array.isArray(a) && Array.isArray(b)){
    // Если оба аргумента массивы, то вернуть строку:
    // "Общая площадь артефактов сжатия: [square] пикселей"
    // где [square] — это сумма произведений соответствующих элементов массивов a и b,
    // cумма произведения первого элемента a с первым элементом b, второго со вторым и так далее
    var square = 0;
    var arr = [];
    for(var i = 0; i < a.length; i++){
      arr.push(a[i] * b[i]);
      square += arr[i];
    }
    return "Общая площадь артефактов сжатия: " + square +  " пикселей";
  }
  if(Array.isArray(a)) {
    // Если первый аргумент массив, то вернуть строку:
    // "Количество красных точек во всех строчках изображения: [sum]"
    // где [sum] — это сумма значений переданного массива
    var sum = 0;
    for(var i = 0; i < a.length; i++){
      sum += a[i];
    }
    return "Количество красных точек во всех строчках изображения: " + sum;
  }
}
